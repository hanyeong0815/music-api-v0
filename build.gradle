plugins {
	id 'java'
	id 'java-library'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.asciidoctor.convert' version '2.2.0'

	id 'com.google.protobuf' version '0.9.4'
}

var commonProject = project(commonModule)

allprojects{
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.asciidoctor.convert'
	apply plugin: 'com.google.protobuf'

	group = 'com.self'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	compileJava {
		options.compilerArgs += [
				'--enable-preview',
				'-Amapstruct.defaultComponentModel=spring'
		]

	}

// Enable Java Preview (2)
	compileTestJava {
		options.compilerArgs += [
				'--enable-preview',
//                '-Amapstruct.defaultComponentModel=spring'
		]
	}

// Enable Java Preview (3)
	test {
		useJUnitPlatform()
		jvmArgs([
				'--enable-preview',
//                '-Amapstruct.defaultComponentModel=spring'
				'-Dspring.profiles.active=local'
		])
	}


	tasks.named('test') {
		useJUnitPlatform()
	}
}
subprojects{
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'

		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

		implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
		implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
		testImplementation 'org.springframework.security:spring-security-test'
	}
}

project(commonModule) {
	dependencies {
		// NTP
		implementation 'commons-net:commons-net:3.9.0'
	}
}

project(jpaCoreModule) {
	dependencies {
		implementation commonProject
		api 'org.springframework.boot:spring-boot-starter-data-jpa'
	}
}

project(mongoCoreModule) {
	dependencies {
		implementation commonProject
		api 'org.springframework.boot:spring-boot-starter-data-mongodb'
	}
}

project(redisCoreModule) {
	dependencies {
		implementation commonProject
		api 'org.springframework.boot:spring-boot-starter-data-redis'
	}
}

project(globalExceptionHandlerCoreModule) {
	dependencies {
		implementation commonProject
	}
}

project(awsS3CoreModule) {
	dependencies {
		implementation commonProject

		implementation 'org.springframework.boot:spring-boot'
		api 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	}
}

project(securityModule) {
	dependencies {
		implementation commonProject

		api 'org.jetbrains:annotations:24.0.1'
		api 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.springframework.boot:spring-boot'

		implementation 'com.google.code.gson:gson:2.10.1'

	}
}

project(gsonCore) {
	dependencies {
		implementation commonProject

		// GSON
		api 'com.google.code.gson:gson:2.10.1'
	}
}

project(memberProfileGrpcInterfaceCore) {
	dependencies {
		implementation commonProject

		implementation 'io.grpc:grpc-protobuf:1.57.2'
		implementation 'io.grpc:grpc-stub:1.57.2'
		// never update above 2 (protoBuf task doesn't support jakarta package but supports only javax package)
		compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'
	}

	protobuf {
		protoc {
			artifact = 'com.google.protobuf:protoc:3.24.2'
		}
		generatedFilesBaseDir = "$projectDir/src/generated"
		clean {
			delete generatedFilesBaseDir
		}
		plugins {
			grpc {
				artifact = 'io.grpc:protoc-gen-grpc-java:1.57.2'
			}
		}
		generateProtoTasks {
			all()*.plugins {
				grpc{}
			}
		}
	}

	jar {
		enabled = true
		archiveFileName = "member-profile-interface.jar"
		destinationDirectory = new File("$rootDir/grpc")
	}
}

// ============================================== member-service
project(memberService) {
	dependencies {
		implementation commonProject
		api project(securityModule)
		implementation project(globalExceptionHandlerCoreModule)
		api project(memberApplicationModule)
		api project(memberRdbAdapter)
		api project(memberWebAdapter)

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		// GSON
		testImplementation 'com.google.code.gson:gson:2.10.1'

		api 'net.devh:grpc-client-spring-boot-starter:2.14.0.RELEASE'
		api 'net.devh:grpc-spring-boot-starter:2.14.0.RELEASE'
	}

	bootJar {
		enabled = true
	}
}

project(memberDomain) {
	dependencies {
		implementation commonProject

		// GSON
		implementation 'com.google.code.gson:gson:2.10.1'
	}
}

project(memberApplicationModule) {
	dependencies {
		implementation commonProject
		api project(memberProfileGrpcInterfaceCore)
		api project(memberDomain)
		api project(memberReadModels)
		api project(securityModule)

		implementation 'org.springframework.boot:spring-boot-starter-security'
		implementation 'org.jetbrains:annotations:24.0.1'

		// AOP
		implementation 'org.springframework.boot:spring-boot-starter-aop'

		// GSON
		implementation 'com.google.code.gson:gson:2.10.1'

		// jwt
		implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
		implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
		implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

		// grpc
		api 'net.devh:grpc-client-spring-boot-starter:2.14.0.RELEASE'

		// Map Struct
		implementation 'org.mapstruct:mapstruct:1.5.3.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
		annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	}
}

project(memberRdbAdapter) {
	dependencies {
		implementation commonProject
		api project(securityModule)
		api project(jpaCoreModule)
		api project(memberApplicationModule)

		implementation 'org.flywaydb:flyway-core:9.16.0'

		runtimeOnly 'org.postgresql:postgresql'

		// Map Struct
		implementation 'org.mapstruct:mapstruct:1.5.3.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
		annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	}
}

project(memberRedisAdapter) {
	dependencies {
		implementation commonProject
		api project(redisCoreModule)
		api project(memberApplicationModule)

		// Map Struct
		implementation 'org.mapstruct:mapstruct:1.5.3.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
		annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	}
}

project(memberWebAdapter) {
	dependencies {
		implementation commonProject
		implementation project(gsonCore)
		implementation project(memberApplicationModule)

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-validation'


		// Map Struct
		implementation 'org.mapstruct:mapstruct:1.5.3.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
		annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	}
}

// ============================================== member-service
project(profileService) {
	dependencies {
		implementation commonProject
		implementation project(globalExceptionHandlerCoreModule)
		api project(profileApplication)
		api project(profileRdbAdapter)
		api project(profileInternalApiAdapter)
		api project(profileWebAdapter)

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-validation'

		// GSON
		testImplementation 'com.google.code.gson:gson:2.10.1'

		api 'net.devh:grpc-client-spring-boot-starter:2.14.0.RELEASE'
		api 'net.devh:grpc-spring-boot-starter:2.14.0.RELEASE'
	}

	bootJar {
		enabled = true
	}
}

project(profileDomain) {
	dependencies {
		implementation commonProject

		// GSON
		implementation 'com.google.code.gson:gson:2.10.1'
	}
}

project(profileApplication) {
	dependencies {
		implementation commonProject
		api project(profileDomain)
		api project(profilereadModels)

		// GSON
		implementation 'com.google.code.gson:gson:2.10.1'
	}
}

project(profileRdbAdapter) {
	dependencies {
		implementation commonProject
		api project(jpaCoreModule)
		api project(profileApplication)

		implementation 'org.flywaydb:flyway-core:9.16.0'

		runtimeOnly 'org.postgresql:postgresql'

		// Map Struct
		implementation 'org.mapstruct:mapstruct:1.5.3.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
		annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	}
}

project(profileInternalApiAdapter) {
	dependencies {
		implementation commonProject
		api project(memberProfileGrpcInterfaceCore)
		implementation project(profileApplication)

		implementation 'org.springframework.boot:spring-boot-starter'

		api 'net.devh:grpc-server-spring-boot-starter:2.14.0.RELEASE'

		// Map Struct
		implementation 'org.mapstruct:mapstruct:1.5.3.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
		annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	}
}

project(profileWebAdapter) {
	dependencies {
		implementation commonProject
		implementation project(gsonCore)
		implementation project(profileApplication)

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-validation'


		// Map Struct
		implementation 'org.mapstruct:mapstruct:1.5.3.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
		annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	}
}